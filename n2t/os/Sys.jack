/**
 * Jack OS : Sys
 * Author  : Philip Brown
 * Source  : https://github.com/pwbrown/nand2tetris/n2t/os/Sys.jack
 * 
 * My implementation of the Jack OS Sys (system) class for Nand2Tetris project 12
 */

class Sys {

    /**
     * Initialize the system, call the main function, and then halt execution
     */
    function void init() {
        do Memory.init();
        do Math.init();
        do Screen.init();
        do Output.init();
        do Keyboard.init();
        do Main.main();
        do Sys.halt();
        return;
    }
    
    /**
     * Halts execution
     */
    function void halt() {
        while (true) {}
        return;
    }

    /**
     * Prints an error code before halting execution
     */
    function void error(int errorCode) {
        do Output.printString("ERR");
        do Output.printInt(errorCode);
        do Sys.halt();
        return;
    }

    /**
     * Waits for a given amount of time before resuming execution
     */
    function void wait(int duration) {
        var int i, j;
        let i = 0;
        while (i < duration) {
            let j = 0;
            while (j < 400) { // Speed Factor setting of 400 is based on measuring a duration of 1 second with Online IDE running at max speed
                let j = j + 1;
            }
            let i = i + 1;
        }

        return;
    }
}